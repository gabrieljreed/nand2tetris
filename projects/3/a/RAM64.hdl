// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // address[0..2] selects which RAM8 to use
    // address[3..5] selects which register within the RAM8 to use
    // For example, with the address 111101:
    // 0..2 = 111 (7), which selects RAM8 7
    // 3..5 = 101 (5), which selects register 5 within RAM8 7
    DMux8Way(in=load, sel=address[0..2], a=load_r0, b=load_r1, c=load_r2, d=load_r3, e=load_r4, f=load_r5, g=load_r6, h=load_r7);

    RAM8(in=in, load=load_r0, address=address[3..5], out=r0);
    RAM8(in=in, load=load_r1, address=address[3..5], out=r1);
    RAM8(in=in, load=load_r2, address=address[3..5], out=r2);
    RAM8(in=in, load=load_r3, address=address[3..5], out=r3);
    RAM8(in=in, load=load_r4, address=address[3..5], out=r4);
    RAM8(in=in, load=load_r5, address=address[3..5], out=r5);
    RAM8(in=in, load=load_r6, address=address[3..5], out=r6);
    RAM8(in=in, load=load_r7, address=address[3..5], out=r7);

    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}
